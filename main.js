const {run} = require('./automatedreport.js');
const fs = require('fs');
const path = require('path');
const prompt = require('prompt');
prompt.message = '';


/* SETUP
- Need R, NodeJS
- Set up system environment variables (in png) 
- AutomatedReport Line 106, update Rscript path
*/



async function main() {
    let options = await getUserInput();
    
    // Input Validation
    if (!(options.Sitemap === "true" || options.Sitemap === "false")) {
        console.log(`Sitemap argument accepts either "true" or "false", not ${options.Sitemap}`);
        return 1;
    }
    if (!(options.Temp === "true" || options.Temp === "false")) {
        console.log(`Temp argument accepts either "true" or "false", not ${options.Temp}`);
        return 1;
    }
    if (!fs.existsSync(options.Output) || !fs.statSync(options.Output).isDirectory()) {
        console.log("Output path is invalid.")
    }
    
    /*
    let options = {
        URL: 'https://atlas.illinois.edu/',
        Sitemap: 'true',
        Temp: 'false',
        Output: `C:\\Users\\{insert name of PC}\\OneDrive\\Desktop`
    };
    */

    console.log(options);
    run(options);
    return 0;
}

async function getUserInput() {
  console.log('Fill out the proper fields to obtain web accessibility report:');
  console.log('• URL - enter the URL');
  console.log('• Sitemap - crawl through sitemap of URL; input "true" or "false"');
  console.log('• Temp - keep supporting files generated by process; input "true" or "false"');
  console.log('• Output - enter the output directory; Ex: "C:\\Desktop"');

  return new Promise((resolve, reject) => {
    prompt.start();
    prompt.get(['URL', 'Sitemap', 'Temp', 'Output'], function (err, result) {
      if (err) { reject(err); }
      resolve(result);
    });
  });
}

main();
